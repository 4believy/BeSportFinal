{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Fitness-App-master\\\\Fitness-App-master\\\\src\\\\screens\\\\StatsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ExerciseContext } from \"../components/ExerciseContext\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Colors } from \"../colors/Colors\";\nexport default function StatsScreen() {\n  var _useContext = useContext(ExerciseContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      exerciseContext = _useContext2[0],\n      setExerciseContext = _useContext2[1];\n\n  var removeExercise = function removeExercise() {\n    return _regeneratorRuntime.async(function removeExercise$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"MyExerciseCount\"));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 8:\n            _context.prev = 8;\n            setExerciseContext(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                counts: {\n                  exerciseCount: 0,\n                  workoutCount: prevState.counts.workoutCount\n                }\n              });\n            });\n            return _context.finish(8);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5, 8, 11]], Promise);\n  };\n\n  var removeWorkout = function removeWorkout() {\n    return _regeneratorRuntime.async(function removeWorkout$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"MyWorkoutCount\"));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 8:\n            _context2.prev = 8;\n            setExerciseContext(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                counts: {\n                  workoutCount: 0,\n                  exerciseCount: prevState.counts.exerciseCount\n                }\n              });\n            });\n            return _context2.finish(8);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5, 8, 11]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/mindfulness.png\"),\n    style: {\n      width: \"100%\",\n      height: 200,\n      marginTop: 14\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.cardWide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(AntDesign, {\n    style: styles.iconOne,\n    name: \"Trophy\",\n    size: 24,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.headerOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Exercises Completed:\"), React.createElement(Text, {\n    style: styles.exerciseNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, exerciseContext.counts.exerciseCount.toString()), React.createElement(TouchableOpacity, {\n    style: styles.remove,\n    onPress: function onPress() {\n      return removeExercise();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Restart\"))), React.createElement(View, {\n    style: styles.cardWide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(AntDesign, {\n    style: styles.iconOne,\n    name: \"staro\",\n    size: 24,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.headerOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Workouts Completed:\"), React.createElement(Text, {\n    style: styles.exerciseNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, exerciseContext.counts.workoutCount.toString()), React.createElement(TouchableOpacity, {\n    style: styles.remove,\n    onPress: function onPress() {\n      return removeWorkout();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Restart\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  cardWide: {\n    borderRadius: 15,\n    height: 90,\n    width: \"90%\",\n    paddingTop: 10,\n    paddingHorizontal: 10,\n    backgroundColor: Colors.primary,\n    marginTop: 5\n  },\n  iconOne: {\n    left: 0,\n    top: 0\n  },\n  headerOne: {\n    position: \"absolute\",\n    top: 10,\n    left: 40,\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  },\n  exerciseNumber: {\n    top: 20,\n    right: 45,\n    position: \"absolute\",\n    color: \"white\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  remove: {\n    width: \"30%\",\n    padding: \"2%\",\n    alignItems: \"center\",\n    bottom: 0,\n    left: 0,\n    backgroundColor: \"#fc6781\",\n    borderRadius: 10,\n    marginLeft: \"10%\",\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Downloads/Fitness-App-master/Fitness-App-master/src/screens/StatsScreen.js"],"names":["React","useContext","useEffect","ExerciseContext","AsyncStorage","AntDesign","Colors","StatsScreen","exerciseContext","setExerciseContext","removeExercise","removeItem","alert","prevState","counts","exerciseCount","workoutCount","removeWorkout","styles","container","require","width","height","marginTop","cardWide","iconOne","headerOne","exerciseNumber","toString","remove","color","fontWeight","StyleSheet","create","flex","backgroundColor","alignItems","borderRadius","paddingTop","paddingHorizontal","primary","left","top","position","fontSize","right","padding","bottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport { ExerciseContext } from \"../components/ExerciseContext\";\n\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Colors } from \"../colors/Colors\";\n\nexport default function StatsScreen() {\n  const [exerciseContext, setExerciseContext] = useContext(ExerciseContext);\n\n  const removeExercise = async () => {\n    try {\n      await AsyncStorage.removeItem(\"MyExerciseCount\");\n    } catch (err) {\n      alert(err);\n    } finally {\n      setExerciseContext((prevState) => ({\n        ...prevState,\n        counts: {\n          exerciseCount: 0,\n          workoutCount: prevState.counts.workoutCount,\n        },\n      }));\n    }\n  };\n\n  const removeWorkout = async () => {\n    try {\n      await AsyncStorage.removeItem(\"MyWorkoutCount\");\n    } catch (err) {\n      alert(err);\n    } finally {\n      setExerciseContext((prevState) => ({\n        ...prevState,\n        counts: {\n          workoutCount: 0,\n          exerciseCount: prevState.counts.exerciseCount,\n        },\n      }));\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../../assets/mindfulness.png\")}\n        style={{ width: \"100%\", height: 200, marginTop: 14 }}\n        resizeMode=\"contain\"\n      />\n      <View style={styles.cardWide}>\n        <AntDesign\n          style={styles.iconOne}\n          name=\"Trophy\"\n          size={24}\n          color=\"white\"\n        />\n        <Text style={styles.headerOne}>Exercises Completed:</Text>\n        <Text style={styles.exerciseNumber}>\n          {exerciseContext.counts.exerciseCount.toString()}\n        </Text>\n        <TouchableOpacity style={styles.remove} onPress={() => removeExercise()}>\n          <Text style={{ color: \"white\", fontWeight: \"bold\" }}>Restart</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.cardWide}>\n        <AntDesign\n          style={styles.iconOne}\n          name=\"staro\"\n          size={24}\n          color=\"white\"\n        />\n        <Text style={styles.headerOne}>Workouts Completed:</Text>\n        <Text style={styles.exerciseNumber}>\n          {exerciseContext.counts.workoutCount.toString()}\n        </Text>\n        <TouchableOpacity style={styles.remove} onPress={() => removeWorkout()}>\n          <Text style={{ color: \"white\", fontWeight: \"bold\" }}>Restart</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n  },\n  cardWide: {\n    borderRadius: 15,\n    height: 90,\n    width: \"90%\",\n    paddingTop: 10,\n    paddingHorizontal: 10,\n    backgroundColor: Colors.primary,\n    marginTop: 5,\n  },\n  iconOne: {\n    left: 0,\n    top: 0,\n  },\n  headerOne: {\n    position: \"absolute\",\n    top: 10,\n    left: 40,\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  },\n  exerciseNumber: {\n    top: 20,\n    right: 45,\n    position: \"absolute\",\n    color: \"white\",\n    fontSize: 30,\n    fontWeight: \"bold\",\n  },\n  remove: {\n    width: \"30%\",\n    padding: \"2%\",\n    alignItems: \"center\",\n    bottom: 0,\n    left: 0,\n    backgroundColor: \"#fc6781\",\n    borderRadius: 10,\n    marginLeft: \"10%\",\n    marginTop: 5,\n  },\n});"]},"metadata":{},"sourceType":"module"}