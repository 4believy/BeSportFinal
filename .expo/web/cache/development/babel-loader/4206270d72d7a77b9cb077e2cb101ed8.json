{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Fitness-App-master\\\\Fitness-App-master\\\\App.js\",\n    _this2 = this;\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport AppLoading from \"expo-app-loading\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport * as Font from \"expo-font\";\nimport { Colors } from \"./src/colors/Colors\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport CalendarScreen from \"./src/screens/CalendarScreen\";\nimport ExercisesScreen_FR from \"./src/screens/ExercisesScreen_FR\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport WorkoutScreen from \"./src/screens/WorkoutScreen\";\nimport StatsScreen from \"./src/screens/StatsScreen\";\nimport ExercisesScreen_S from \"./src/screens/ExercisesScreen_S\";\nimport { ExerciseProvider } from \"./src/components/ExerciseContext\";\nimport TermsOfUseScreen from \"./src/screens/TermsOfUseScreen\";\nimport PrivacyPolicyScreen from \"./src/screens/PrivacyPolicyScreen\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    \"lato-regular\": require(\"./assets/fonts/Lato-Regular.ttf\"),\n    \"lato-bold\": require(\"./assets/fonts/Lato-Bold.ttf\")\n  });\n};\n\nvar Tab = createBottomTabNavigator();\nvar NestedStack = createStackNavigator();\n\nfunction MyTabs() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    tabBarOptions: {\n      activeTintColor: Colors.primary\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Nested,\n    options: {\n      tabBarLabel: \"Home\",\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(AntDesign, {\n          name: \"home\",\n          size: size,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Calendar\",\n    component: CalendarScreen,\n    options: {\n      tabBarLabel: \"Calendar\",\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(AntDesign, {\n          name: \"calendar\",\n          size: size,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Exercises\",\n    component: MyTopTabs,\n    options: {\n      tabBarLabel: \"Exercises\",\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(AntDesign, {\n          name: \"hearto\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: NestedSettings,\n    options: {\n      tabBarLabel: \"Settings\",\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(AntDesign, {\n          name: \"setting\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Nested = function Nested() {\n  return React.createElement(NestedStack.Navigator, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, React.createElement(NestedStack.Screen, {\n    options: {\n      headerShown: false,\n      title: \"Back\"\n    },\n    name: \"HomeScreen\",\n    component: HomeScreen,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), React.createElement(NestedStack.Screen, {\n    name: \"WorkoutScreen\",\n    component: WorkoutScreen,\n    options: {\n      title: \"Workout\",\n      headerStyle: {\n        backgroundColor: Colors.primary\n      },\n      headerTintColor: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), React.createElement(NestedStack.Screen, {\n    name: \"StatsScreen\",\n    component: StatsScreen,\n    options: {\n      title: \"Statistics\",\n      headerStyle: {\n        backgroundColor: Colors.primary\n      },\n      headerTintColor: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar NestedSettings = function NestedSettings() {\n  return React.createElement(NestedStack.Navigator, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, React.createElement(NestedStack.Screen, {\n    options: {\n      headerShown: false,\n      title: \"Back\"\n    },\n    name: \"SettingsScreen\",\n    component: SettingsScreen,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), React.createElement(NestedStack.Screen, {\n    name: \"TermsOfUseScreen\",\n    component: TermsOfUseScreen,\n    options: {\n      title: \"Terms of Use\",\n      headerStyle: {\n        backgroundColor: Colors.primary\n      },\n      headerTintColor: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), React.createElement(NestedStack.Screen, {\n    name: \"PrivacyPolicyScreen\",\n    component: PrivacyPolicyScreen,\n    options: {\n      title: \"Privacy Policy\",\n      headerStyle: {\n        backgroundColor: Colors.primary\n      },\n      headerTintColor: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar TopTab = createMaterialTopTabNavigator();\n\nfunction MyTopTabs() {\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, React.createElement(TopTab.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, React.createElement(TopTab.Screen, {\n    name: \"Foam Roller\",\n    component: ExercisesScreen_FR,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), React.createElement(TopTab.Screen, {\n    name: \"Stretches\",\n    component: ExercisesScreen_S,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(ExerciseProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, React.createElement(NavigationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, React.createElement(MyTabs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      onError: console.warn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Downloads/Fitness-App-master/Fitness-App-master/App.js"],"names":["React","useState","NavigationContainer","createStackNavigator","createBottomTabNavigator","createMaterialTopTabNavigator","AppLoading","AntDesign","Font","Colors","HomeScreen","CalendarScreen","ExercisesScreen_FR","SettingsScreen","WorkoutScreen","StatsScreen","ExercisesScreen_S","ExerciseProvider","TermsOfUseScreen","PrivacyPolicyScreen","getFonts","loadAsync","require","Tab","NestedStack","MyTabs","activeTintColor","primary","Nested","tabBarLabel","tabBarIcon","color","size","MyTopTabs","NestedSettings","headerShown","title","headerStyle","backgroundColor","headerTintColor","TopTab","flex","App","fontsLoaded","setFontsLoaded","console","warn","styles","StyleSheet","create","container","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, SafeAreaView } from \"react-native\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport AppLoading from \"expo-app-loading\";\n\nimport { AntDesign } from \"@expo/vector-icons\";\nimport * as Font from \"expo-font\";\n\nimport { Colors } from \"./src/colors/Colors\";\n\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport CalendarScreen from \"./src/screens/CalendarScreen\";\nimport ExercisesScreen_FR from \"./src/screens/ExercisesScreen_FR\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport WorkoutScreen from \"./src/screens/WorkoutScreen\";\nimport StatsScreen from \"./src/screens/StatsScreen\";\nimport ExercisesScreen_S from \"./src/screens/ExercisesScreen_S\";\nimport { ExerciseProvider } from \"./src/components/ExerciseContext\";\n\nimport TermsOfUseScreen from \"./src/screens/TermsOfUseScreen\";\nimport PrivacyPolicyScreen from \"./src/screens/PrivacyPolicyScreen\";\n\nconst getFonts = () =>\n  Font.loadAsync({\n    \"lato-regular\": require(\"./assets/fonts/Lato-Regular.ttf\"),\n    \"lato-bold\": require(\"./assets/fonts/Lato-Bold.ttf\"),\n  });\n\nconst Tab = createBottomTabNavigator();\nconst NestedStack = createStackNavigator();\n\nfunction MyTabs() {\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Home\"\n      tabBarOptions={{\n        activeTintColor: Colors.primary,\n      }}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={Nested}\n        options={{\n          tabBarLabel: \"Home\",\n          tabBarIcon: ({ color, size }) => (\n            <AntDesign name=\"home\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Calendar\"\n        component={CalendarScreen}\n        options={{\n          tabBarLabel: \"Calendar\",\n          tabBarIcon: ({ color, size }) => (\n            <AntDesign name=\"calendar\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Exercises\"\n        component={MyTopTabs}\n        options={{\n          tabBarLabel: \"Exercises\",\n          tabBarIcon: ({ color, size }) => (\n            <AntDesign name=\"hearto\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={NestedSettings}\n        options={{\n          tabBarLabel: \"Settings\",\n          tabBarIcon: ({ color, size }) => (\n            <AntDesign name=\"setting\" color={color} size={size} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nconst Nested = () => {\n  return (\n    <NestedStack.Navigator>\n      <NestedStack.Screen\n        options={{ headerShown: false, title: \"Back\" }}\n        name=\"HomeScreen\"\n        component={HomeScreen}\n      />\n      <NestedStack.Screen\n        name=\"WorkoutScreen\"\n        component={WorkoutScreen}\n        options={{\n          title: \"Workout\",\n          headerStyle: {\n            backgroundColor: Colors.primary,\n          },\n          headerTintColor: \"#fff\",\n        }}\n      />\n      <NestedStack.Screen\n        name=\"StatsScreen\"\n        component={StatsScreen}\n        options={{\n          title: \"Statistics\",\n          headerStyle: {\n            backgroundColor: Colors.primary,\n          },\n          headerTintColor: \"#fff\",\n        }}\n      />\n    </NestedStack.Navigator>\n  );\n};\n\nconst NestedSettings = () => {\n  return (\n    <NestedStack.Navigator>\n      <NestedStack.Screen\n        options={{ headerShown: false, title: \"Back\" }}\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n      />\n      <NestedStack.Screen\n        name=\"TermsOfUseScreen\"\n        component={TermsOfUseScreen}\n        options={{\n          title: \"Terms of Use\",\n          headerStyle: {\n            backgroundColor: Colors.primary,\n          },\n          headerTintColor: \"#fff\",\n        }}\n      />\n      <NestedStack.Screen\n        name=\"PrivacyPolicyScreen\"\n        component={PrivacyPolicyScreen}\n        options={{\n          title: \"Privacy Policy\",\n          headerStyle: {\n            backgroundColor: Colors.primary,\n          },\n          headerTintColor: \"#fff\",\n        }}\n      />\n    </NestedStack.Navigator>\n  );\n};\n\nconst TopTab = createMaterialTopTabNavigator();\n\nfunction MyTopTabs() {\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"white\" }}>\n      <TopTab.Navigator>\n        <TopTab.Screen name=\"Foam Roller\" component={ExercisesScreen_FR} />\n        <TopTab.Screen name=\"Stretches\" component={ExercisesScreen_S} />\n      </TopTab.Navigator>\n    </SafeAreaView>\n  );\n}\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  if (fontsLoaded) {\n    return (\n      <ExerciseProvider>\n        <NavigationContainer>\n          <MyTabs />\n        </NavigationContainer>\n      </ExerciseProvider>\n    );\n  } else {\n    return (\n      <AppLoading\n        startAsync={getFonts}\n        onFinish={() => setFontsLoaded(true)}\n        onError={console.warn}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}