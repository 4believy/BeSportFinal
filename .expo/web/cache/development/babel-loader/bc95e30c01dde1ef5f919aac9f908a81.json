{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Fitness-App-master\\\\Fitness-App-master\\\\src\\\\screens\\\\CalendarScreen.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ExerciseContext } from \"../components/ExerciseContext\";\nimport { Colors } from \"../colors/Colors\";\nimport { Calendar } from \"react-native-calendars\";\nexport default function CalendarScreen() {\n  var _useContext = useContext(ExerciseContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      exerciseContext = _useContext2[0],\n      setExerciseContext = _useContext2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.pageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"CALENDAR\"), React.createElement(View, {\n    style: styles.filler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(Calendar, {\n    markedDates: exerciseContext.completedDates,\n    markingType: \"multi-dot\",\n    theme: {\n      backgroundColor: \"#ffffff\",\n      calendarBackground: \"#ffffff\",\n      textSectionTitleColor: Colors.primaryFont,\n      textSectionTitleDisabledColor: \"#d9e1e8\",\n      selectedDayBackgroundColor: Colors.primary,\n      selectedDayTextColor: \"#ffffff\",\n      todayTextColor: Colors.primary,\n      dayTextColor: \"#2d4150\",\n      textDisabledColor: \"#d9e1e8\",\n      dotColor: \"#00adf5\",\n      selectedDotColor: \"#ffffff\",\n      arrowColor: Colors.primary,\n      disabledArrowColor: \"#d9e1e8\",\n      monthTextColor: Colors.primary,\n      indicatorColor: \"blue\",\n      textDayFontWeight: \"300\",\n      textMonthFontWeight: \"bold\",\n      textDayHeaderFontWeight: \"300\",\n      \"stylesheet.calendar.header\": {\n        dayHeader: {\n          width: 48\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    source: require(\"../../assets/calendar.png\"),\n    style: {\n      width: \"100%\",\n      height: \"20%\",\n      marginBottom: 5,\n      marginTop: \"10%\"\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.calendarSummary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"One study found that stretching 4 times per week provided 82% greater flexibility improvements than stretching 2 times per week. It is not clear where the upper limit of frequency benefits is, so the recommended frequency is therefore 3-7 days per week.\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  pageRef: {\n    position: \"absolute\",\n    top: \"5%\",\n    left: \"7%\",\n    color: \"grey\",\n    fontSize: 10\n  },\n  filler: {\n    marginTop: \"15%\"\n  },\n  text: {\n    marginTop: 0,\n    paddingRight: 30\n  },\n  main: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    top: 250\n  },\n  answerContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  calendarSummary: {\n    fontSize: 9,\n    paddingHorizontal: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 0,\n    color: Colors.primaryFont,\n    textAlign: \"center\"\n  },\n  statContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    width: 200,\n    height: 50,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderColor: \"#eeeeee\",\n    marginTop: \"20%\",\n    marginBottom: \"10%\",\n    shadowOffset: {\n      width: 0.5,\n      height: 0.5\n    },\n    shadowOpacity: 0.26,\n    shadowColor: \"black\",\n    elevation: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Downloads/Fitness-App-master/Fitness-App-master/src/screens/CalendarScreen.js"],"names":["React","useContext","useEffect","AsyncStorage","ExerciseContext","Colors","Calendar","CalendarScreen","exerciseContext","setExerciseContext","styles","container","pageRef","filler","completedDates","backgroundColor","calendarBackground","textSectionTitleColor","primaryFont","textSectionTitleDisabledColor","selectedDayBackgroundColor","primary","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","dotColor","selectedDotColor","arrowColor","disabledArrowColor","monthTextColor","indicatorColor","textDayFontWeight","textMonthFontWeight","textDayHeaderFontWeight","dayHeader","width","require","height","marginBottom","marginTop","calendarSummary","StyleSheet","create","flex","alignItems","justifyContent","position","top","left","color","fontSize","text","paddingRight","main","answerContainer","flexDirection","paddingHorizontal","zIndex","textAlign","statContainer","borderWidth","borderColor","shadowOffset","shadowOpacity","shadowColor","elevation"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { StyleSheet, Text, View, Image, AsyncStorage, Button } from \"react-native\";\nimport { ExerciseContext } from \"../components/ExerciseContext\";\nimport { Colors } from \"../colors/Colors\";\n\nimport { Calendar } from \"react-native-calendars\";\n\n// let markedDates = {\n//   \"2012-05-16\": { selected: true, marked: true, selectedColor: \"blue\" },\n//   \"2012-05-17\": { marked: true },\n//   \"2012-05-18\": { marked: true, dotColor: \"red\", activeOpacity: 0 },\n//   \"2012-05-19\": { disabled: true, disableTouchEvent: true },\n// };\n\n// console.log(\"Dates: \", markedDates);\n\n// markedDates = { ...markedDates, \"2012-05-20\": { selected: true, marked: true, selectedColor: \"blue\" } };\n\n// console.log(\"NewDates: \", markedDates);\n\nexport default function CalendarScreen() {\n  const [exerciseContext, setExerciseContext] = useContext(ExerciseContext);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.pageRef}>CALENDAR</Text>\n      <View style={styles.filler}></View>\n      <Calendar\n        markedDates={exerciseContext.completedDates}\n        markingType={\"multi-dot\"}\n        theme={{\n          backgroundColor: \"#ffffff\",\n          calendarBackground: \"#ffffff\",\n          textSectionTitleColor: Colors.primaryFont,\n          textSectionTitleDisabledColor: \"#d9e1e8\",\n          selectedDayBackgroundColor: Colors.primary,\n          selectedDayTextColor: \"#ffffff\",\n          todayTextColor: Colors.primary,\n          dayTextColor: \"#2d4150\",\n          textDisabledColor: \"#d9e1e8\",\n          dotColor: \"#00adf5\",\n          selectedDotColor: \"#ffffff\",\n          arrowColor: Colors.primary,\n          disabledArrowColor: \"#d9e1e8\",\n          monthTextColor: Colors.primary,\n          indicatorColor: \"blue\",\n          textDayFontWeight: \"300\",\n          textMonthFontWeight: \"bold\",\n          textDayHeaderFontWeight: \"300\",\n          \"stylesheet.calendar.header\": {\n            dayHeader: {\n              width: 48,\n            },\n          },\n        }}\n      />\n      <Image\n        source={require(\"../../assets/calendar.png\")}\n        style={{ width: \"100%\", height: \"20%\", marginBottom: 5, marginTop: \"10%\" }}\n        resizeMode=\"contain\"\n      />\n      <Text style={styles.calendarSummary}>\n        One study found that stretching 4 times per week provided 82% greater\n        flexibility improvements than stretching 2 times per week. It is not\n        clear where the upper limit of frequency benefits is, so the recommended\n        frequency is therefore 3-7 days per week.\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  pageRef: {\n    position: \"absolute\",\n    top: \"5%\",\n    left: \"7%\",\n    color: \"grey\",\n    fontSize: 10,\n  },\n  filler: {\n    marginTop: \"15%\",\n  },\n  text: {\n    marginTop: 0,\n    paddingRight: 30,\n  },\n  main: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    top: 250,\n  },\n  answerContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  calendarSummary: {\n    fontSize: 9,\n    paddingHorizontal: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 0,\n    color: Colors.primaryFont,\n    textAlign: \"center\",\n  },\n  statContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    width: 200,\n    height: 50,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderColor: \"#eeeeee\",\n    marginTop: \"20%\",\n    marginBottom: \"10%\",\n\n    // add shadows for iOS only\n    shadowOffset: { width: 0.5, height: 0.5 },\n    shadowOpacity: 0.26,\n    shadowColor: \"black\",\n\n    // add shadows for Android only\n    // No options for shadow color, shadow offset, shadow opacity like iOS\n    elevation: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}